/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-10-25 06:18:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class salePopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>매장검색</title>\r\n");
      out.write(" <!-- jQuery -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.min.js\" ></script>\r\n");
      out.write("<link href=\"resources/CSS/admin.css\" rel=\"stylesheet\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#shopDetailId {\r\n");
      out.write("    width: 212px;\r\n");
      out.write("}\r\n");
      out.write("#shopNumId {\r\n");
      out.write("    width: 212px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 매장조회 팝업창 -->\r\n");
      out.write("	<div id=\"light_shop\" class=\"white_content_shop\">\r\n");
      out.write("		<h3>매장조회</h3>\r\n");
      out.write("		<div class=\"CustCheck_Wrap_shop\">\r\n");
      out.write("			<span>매장</span>\r\n");
      out.write("			<input class=\"CustCheck_Info\" id=\"checkShop\" placeholder=\"매장코드 또는 매장명 검색\" style=\"margin-right: 26px;\">\r\n");
      out.write("			<button id=\"Search_but\" onclick=seachPop();>\r\n");
      out.write("				<img class=\"total_search\" src=\"resources/cust_in/search.png\">\r\n");
      out.write("			</button>\r\n");
      out.write("		</div>\r\n");
      out.write("				\r\n");
      out.write("		<!-- 매장조회 내용 -->\r\n");
      out.write("		<table class=\"Cust_popup_table\" id=\"sTb\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th class=\"Check_Box\">선택</th>\r\n");
      out.write("					<th class=\"shopNum\">매장코드</th>\r\n");
      out.write("					<th class=\"shopDetail\">매장명</th>\r\n");
      out.write("					<th class=\"shopState\">매장상태</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</thead>\r\n");
      out.write("			<tbody id=\"searchPopup\">\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		<!-- 매장조회 내용 end-->\r\n");
      out.write("		<button class=\"popupBut\" onclick=\"window.close();\">\r\n");
      out.write("		닫기\r\n");
      out.write("		</button>\r\n");
      out.write("		<button type=\"submit\" class=\"popupBut\" id=\"popUpsumitBtn\" onclick=\"popUpsumit();\">\r\n");
      out.write("		적용\r\n");
      out.write("		</button>\r\n");
      out.write("	</div>\r\n");
      out.write("<!-- 매장조회 팝업창end -->\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("$(document).ready(\r\n");
      out.write("	$(opener).one('beforeunload', function() {             // 부모창의 새로고침/닫기/앞으로/뒤로\r\n");
      out.write("		window.close();                                    // 팝업을 닫는다\r\n");
      out.write("	})\r\n");
      out.write(");\r\n");
      out.write("\r\n");
      out.write("var saleCode = $('#saleCode').val();	//매장코드\r\n");
      out.write("var saleName = $('#saleName').val();	//매장명\r\n");
      out.write("var checkShop = $('#checkShop').val();	//팝업창 검색창\r\n");
      out.write("	\r\n");
      out.write("//매장조회 팝업창 open 리스트 뿌리기\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("	//부모창의 검색어(#saleName) =>자식창 팝업창에 넣음(checkShop)\r\n");
      out.write("	document.getElementById('checkShop').value = opener.$('#saleName').val();\r\n");
      out.write("\r\n");
      out.write("	var saleName = $('#checkShop').val();	//팝업창 검색어\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: 'SearchButSale.me',\r\n");
      out.write("		data: {\"saleName\":saleName},\r\n");
      out.write("		type: 'post',\r\n");
      out.write("		dataType: 'json',\r\n");
      out.write("		success: function(searchPopup){\r\n");
      out.write("			console.log(searchPopup);\r\n");
      out.write("			\r\n");
      out.write("			//테이블에 데이터 전달\r\n");
      out.write("			let html = \"\";\r\n");
      out.write("			if(searchPopup.length > 0) { //데이터가 0개 이상 존재하면 each로 표를 생성하면서 데이터를 뿌려준다.\r\n");
      out.write("				$.each(searchPopup, function(index, item){\r\n");
      out.write("					html += \"<tr style='width: 100%;'>\";  \r\n");
      out.write("					html += \"<td class='Check_Box'>\"+\"<input class='searchPopupInput' id='shopCheck' type='checkbox' name='shopCheck' value=\"+(item.PRT_CD)+\" onclick='checkOnlyOne(this)'>\"+\"</td>\";\r\n");
      out.write("					html += \"<td class='shopNum' id='shopNumId'>\"+item.PRT_CD+\"</td>\";\r\n");
      out.write("					html += \"<td class='shopDetail' id='shopDetailId'>\"+item.PRT_NM+\"</td>\";\r\n");
      out.write("					html += \"<td class='shopState' id='shopState'>\"+item.PRT_SS_CD+\"</td>\";\r\n");
      out.write("					html += \"</tr>\";\r\n");
      out.write("				});\r\n");
      out.write("			} else {//데이터가 존재하지않을 시\r\n");
      out.write("				html += \"<tr>\";\r\n");
      out.write("				html += \"<td colspan='4'>존재하지않는 매장입니다.</td>\";\r\n");
      out.write("				html += \"</tr>\";\r\n");
      out.write("			}\r\n");
      out.write("			//each로 생성한 데이터를 담은 표를 tbody에 html에 넣는다.\r\n");
      out.write("			$(\"tbody#searchPopup\").html(html);\r\n");
      out.write("					\r\n");
      out.write("			//부모팝업창->자식팝업창 input으로 포커스이동\r\n");
      out.write("			document.getElementById(\"checkShop\").focus();\r\n");
      out.write("		},\r\n");
      out.write("		error: function(data){\r\n");
      out.write("			console.log(data);\r\n");
      out.write("			alert('조회할 수 없습니다.');\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//엔터키 검색\r\n");
      out.write("$(\"#checkShop\").keydown(function enter(event){               \r\n");
      out.write("	if(event.keyCode == 13) {	//keyCode: 13(enter)\r\n");
      out.write("		seachPop();//매장검색 함수\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//매장조회 팝업창 - 검색\r\n");
      out.write("function seachPop(){\r\n");
      out.write("	var checkShop = $('#checkShop').val(); //검색값\r\n");
      out.write("	console.log(checkShop);\r\n");
      out.write("	\r\n");
      out.write("	//2글자 이상 입력하시오.\r\n");
      out.write("	if(checkShop.trim() == '' || checkShop.trim().length == 1) {\r\n");
      out.write("		alert('2글자 이상 입력하시오.');\r\n");
      out.write("		$('#checkShop').focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//매장검색\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: 'SearchButSale.me',\r\n");
      out.write("		data: {\"saleName\":checkShop},\r\n");
      out.write("		type: 'post',\r\n");
      out.write("		dataType: 'json',\r\n");
      out.write("		success: function(data){\r\n");
      out.write("			console.log(data);\r\n");
      out.write("			\r\n");
      out.write("			//테이블에 데이터 전달\r\n");
      out.write("			let html = \"\";\r\n");
      out.write("			if(data.length > 0) {//데이터의 길이가 0개 이상일 경우\r\n");
      out.write("				$.each(data, function(index, item){//데이터를 item에 담아서 each로 반복실행\r\n");
      out.write("					html += \"<tr style='width: 100%'>\";\r\n");
      out.write("					if(item.PRT_CD.length == 1){//결과값이 하나인 경우 \r\n");
      out.write("						html += \"<td class='Check_Box'>\"+\"<input class='searchPopupInput' type='checkbox' name='shopCheck' value=\"+ item.PRT_CD +\" onclick='checkOnlyOne(this)'>\"+\"</td>\";\r\n");
      out.write("					}else{//결과값이 하나가 아닌 경우\r\n");
      out.write("						html += \"<td class='Check_Box'>\"+\"<input class='searchPopupInput' type='checkbox' name='shopCheck' value=\"+ (item.PRT_CD +1) +\" onclick='checkOnlyOne(this)'>\"+\"</td>\";\r\n");
      out.write("					}\r\n");
      out.write("					html += \"<td class='shopNum' id='shopNumId' name='shopName'>\"+item.PRT_CD+\"</td>\";\r\n");
      out.write("					html += \"<td class='shopDetail' id='shopDetailId' name='shopName'>\"+item.PRT_NM+\"</td>\";\r\n");
      out.write("					html += \"<td class='shopState' id='shopState' name='shopName'>\"+item.PRT_SS_CD+\"</td>\";\r\n");
      out.write("					html += \"</tr>\";\r\n");
      out.write("				});\r\n");
      out.write("			} else {//데이터의 길이가 0개일 경우\r\n");
      out.write("					html += \"<tr>\";\r\n");
      out.write("					html += \"<td colspan='4'>존재하지않는 매장입니다.</td>\";\r\n");
      out.write("					html += \"</tr>\";\r\n");
      out.write("			}\r\n");
      out.write("			//each로 생성한 데이터를 담은 표를 tbody에 html에 넣는다.\r\n");
      out.write("			$(\"tbody#searchPopup\").html(html);\r\n");
      out.write("			\r\n");
      out.write("			//부모팝업창->자식팝업창 input으로 포커스이동\r\n");
      out.write("			document.getElementById(\"checkShop\").focus();\r\n");
      out.write("		},\r\n");
      out.write("		error: function(data){\r\n");
      out.write("		console.log(data);\r\n");
      out.write("		alert('조회할 수 없습니다.');\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("//매장조회 팝업창 - 체크박스 1개만 체크가능\r\n");
      out.write("function checkOnlyOne(element) {\r\n");
      out.write("	const checkboxes = document.getElementsByName(\"shopCheck\");\r\n");
      out.write("	  \r\n");
      out.write("	checkboxes.forEach((cb) => {//foreach를 통해 체크되지않은것들은 false로 설정.\r\n");
      out.write("		cb.checked = false;\r\n");
      out.write("	})\r\n");
      out.write("	element.checked = true;//체크된 체크박스는 true로 체크설정\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//매장조회 팝업창 안에 표 클릭시 이벤트\r\n");
      out.write("$(\"#sTb\").on('click', 'tr', function(e){\r\n");
      out.write("	//행 클릭 시 체크박스 체크\r\n");
      out.write("	var chkbox = $(this).find('td:first-child :checkbox');	//클릭이벤트가 일어난 행의 체크박스선택\r\n");
      out.write("	$('input[type=\"checkbox\"][name=\"shopCheck\"]').prop('checked',false);//다른 체크박스는 체크해지.\r\n");
      out.write("	chkbox.prop('checked', !chkbox.prop('checked'));//클릭이벤트가 일어난 행의 체크박스선택, 다른체크박스는 체크해지\r\n");
      out.write("\r\n");
      out.write("	//행 더블클릭 시 팝업창 닫히고 데이터 전달\r\n");
      out.write("	$(\"#searchPopup tr\").dblclick(function() {\r\n");
      out.write("		var PRT_CD = $(\"input[name='shopCheck']:checked\").val();//더블클릭이 일어난 행에 체크박스 체크.(체크박스에 매장코드를 담아놓았음.)\r\n");
      out.write("		var PRT_NM = $(\"input[name='shopCheck']:checked\").parent().parent().children().eq(2).text();//체크한 행의 매장명\r\n");
      out.write("		console.log(PRT_CD);\r\n");
      out.write("		console.log(PRT_NM);\r\n");
      out.write("		$(\"#saleName\", opener.document).val(PRT_NM);//부모창에 데이터 전달(매장명)           \r\n");
      out.write("		$(\"#saleCode\", opener.document).val(PRT_CD);//부모창에 데이터 전달(매장코드)\r\n");
      out.write("		window.close();//팝업창을 닫아준다.\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//매장조회 팝업창 - 적용버튼 클릭시 실행\r\n");
      out.write("function popUpsumit(){\r\n");
      out.write("	//체크박스의 값 전달\r\n");
      out.write("	var items = $('input:checkbox[type=checkbox]:checked').map(function () {\r\n");
      out.write("	    return this.value;//체크한 자신의 값을 담음.\r\n");
      out.write("	}).get();\r\n");
      out.write("	var popUpsumit = items[0];//체크한 0번째 값\r\n");
      out.write("	\r\n");
      out.write("	//체크박스 선택 안할 시 알림창\r\n");
      out.write("	var sumit = $(\"input:checkbox[name='shopCheck']\").is(\":checked\");\r\n");
      out.write("	if(!sumit) {\r\n");
      out.write("		alert(\"조회할 회원을 선택해주세요.\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	var PRT_CD = $(\"input[name='shopCheck']:checked\").val();//체크박스 체크값.(체크박스에 매장코드를 담아놓았음.)\r\n");
      out.write("	var PRT_NM = $(\"input[name='shopCheck']:checked\").parent().parent().children().eq(2).text();//체크한 행의 매장명\r\n");
      out.write("	console.log(PRT_CD);\r\n");
      out.write("	console.log(PRT_NM);\r\n");
      out.write("	$(\"#saleName\", opener.document).val(PRT_NM);//부모창에 데이터 전달(매장명)                     \r\n");
      out.write("	$(\"#saleCode\", opener.document).val(PRT_CD);//부모창에 데이터 전달(매장코드)\r\n");
      out.write("\r\n");
      out.write("	window.close();//팝업창을 닫아준다.\r\n");
      out.write("\r\n");
      out.write("};\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
